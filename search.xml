<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>leetcode42-Trapping Rain Water</title>
      <link href="/2020/07/04/leetcode42-Trapping-Rain-Water/"/>
      <url>/2020/07/04/leetcode42-Trapping-Rain-Water/</url>
      
        <content type="html"><![CDATA[<h1 id="LeetCode42-Trapping-Rain-Water"><a href="#LeetCode42-Trapping-Rain-Water" class="headerlink" title="LeetCode42-Trapping Rain Water"></a>LeetCode42-Trapping Rain Water</h1><h2 id="1、题目大意"><a href="#1、题目大意" class="headerlink" title="1、题目大意"></a>1、题目大意</h2><p>给定n个非负整数，每个整数代表墙的高度，墙于墙凹泄处可以装雨水，问能装几个单位的雨水。</p><p><img src="/2020/07/04/leetcode42-Trapping-Rain-Water/image-20200704205505481.png" alt="image-20200704205505481"></p><p><img src="/2020/07/04/leetcode42-Trapping-Rain-Water/image-20200704210037436.png" alt="image-20200704210037436"></p><p>例如：[0,1,0,2,1,0,1,3,2,1,2,1]，答案为6</p><p>例如：[4,2,1,0,3,1,2,5]，答案为15</p><h2 id="2、思路"><a href="#2、思路" class="headerlink" title="2、思路"></a>2、思路</h2><p>分析题目，目的是要求出所有凹槽大小和。</p><p>那么我的想法是这样的，设置一个单调递减栈。</p><p>1、如果当前压入栈的元素小于栈顶元素，即直接将该元素加入栈。</p><p>2、如果当前压入栈的元素大于栈顶元素，即需要更新栈内元素，不断弹出栈顶元素直到栈顶元素大于当前元素大小或栈为空。那么在弹出时计算已填充墙的大小，再用总面积减去墙的大小。</p><h2 id="3、代码"><a href="#3、代码" class="headerlink" title="3、代码"></a>3、代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Node</span> &#123;</span></span><br><span class="line">      <span class="keyword">int</span> val;</span><br><span class="line">      <span class="keyword">int</span> index;</span><br><span class="line">    &#125;;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">trap</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; height)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> n = height.size();</span><br><span class="line">        Node sta[n + <span class="number">5</span>];</span><br><span class="line">        <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> l, r;</span><br><span class="line">        <span class="keyword">int</span> tail = <span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">            l = <span class="number">-1</span>;</span><br><span class="line">            r = i;</span><br><span class="line">            <span class="keyword">while</span>(tail &gt; <span class="number">-1</span> &amp;&amp; height[i] &gt;= sta[tail].val) &#123;</span><br><span class="line">                tail--;</span><br><span class="line">                <span class="keyword">if</span>(tail == <span class="number">-1</span>)<span class="keyword">break</span>;</span><br><span class="line">                sum += (sta[tail + <span class="number">1</span>].index - sta[tail].index) * sta[tail + <span class="number">1</span>].val;</span><br><span class="line">                l = sta[tail].index;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(l != <span class="number">-1</span>) &#123;</span><br><span class="line">                ans += (r - l - <span class="number">1</span>) * min(height[i], height[l]) - sum;</span><br><span class="line">            &#125;</span><br><span class="line">            sta[++tail].val = height[i];</span><br><span class="line">            sta[tail].index = i;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>正则表达式</title>
      <link href="/2020/06/13/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
      <url>/2020/06/13/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<h1 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h1><h2 id="1、什么是正则表达式？"><a href="#1、什么是正则表达式？" class="headerlink" title="1、什么是正则表达式？"></a>1、什么是正则表达式？</h2><p>正则表达式是使用字符串去描述一个匹配规则。</p><p>使用正则表达式可以快速判断给定的字符串是否符合匹配规则。</p><p>Java内建正则表达式引擎java.util.regex：</p><p><img src="/2020/06/13/正则表达式/image-20200531111143482.png" alt="image-20200531111143482"></p><h2 id="2、匹配规则"><a href="#2、匹配规则" class="headerlink" title="2、匹配规则"></a>2、匹配规则</h2><p><strong>从左到右按规则匹配。</strong></p><table><thead><tr><th>字符</th><th>样例</th><th>说明</th></tr></thead><tbody><tr><td></td><td>“abc”</td><td>精确匹配”abc”</td></tr><tr><td></td><td>“a\&amp;c”</td><td>精确匹配”a&amp;c”，特殊字符需转义字符’\‘修饰，java字符串还需两次转义’\\&amp;’</td></tr><tr><td>\uxxxx</td><td>“a\u548c’</td><td>‘\uxxxx’可以匹配指定的Unicode字符，如”a和c”</td></tr><tr><td>.</td><td>“a.c”</td><td>‘.’可以匹配一个任意字符，如”abc”、”a&amp;c”等</td></tr><tr><td>\S</td><td>“a\Sb”</td><td>‘\s’可以匹配一个非空白字符，如”a#b”、”a2b”、”a_c”等</td></tr><tr><td>\s</td><td>“a\sb”</td><td>‘\s’可以匹配一个空白字符（空格、tab等），如”a b”、”a    b”等</td></tr><tr><td>\D</td><td>“00\D”</td><td>‘\D’可以匹配一个非数字字符，如”00x”、”00A”、”00 “等</td></tr><tr><td>\d</td><td>“00\d”</td><td>‘\d’可以匹配一个数字字符（0~9），如”001”、”008”等</td></tr><tr><td>\W</td><td>“java\W”</td><td>‘\W’可以匹配一个非字母、数字、下划线字符，如”java “、”java#”等</td></tr><tr><td>\w</td><td>“java\w”</td><td>‘\w’可以匹配任何字符类字符（字母、数字），包括下划线，如”java8”、”java_”等</td></tr><tr><td>*</td><td>“AB*”</td><td>‘*’修饰前面一个字符，可以匹配任意个字符，如”AB”、”ABBBB”等</td></tr><tr><td>+</td><td>“AB+”</td><td>‘+’修饰前面一个字符，可以匹配至少一个字符，如”AB”、”ABBB”等</td></tr><tr><td>?</td><td>“AB?”</td><td>‘?’修饰前面一个字符，可以匹配一个或零个字符，如”A”、”AB”</td></tr><tr><td>{n}</td><td>“A{3}B”</td><td>‘{n}’修饰前面一个字符，可以匹配n个字符，如”AAAB”</td></tr><tr><td>{n,m}</td><td>“A{2,4}B”</td><td>‘{n,m}’修饰前面一个字符，可以匹配n~m个字符，如”AAB”、”AAAB”、”AAAAB”</td></tr><tr><td>{n,}</td><td>“A{3,}B”</td><td>‘{n,}’修饰前面一个字符，可以匹配至少n个字符，如”AAAB”、”AAAAB”等</td></tr><tr><td>\B</td><td>“P\BAP”</td><td>‘\B’可以匹配字符与字符、符号与符号的边界，如”PAP”</td></tr><tr><td>\b</td><td>“,\bAP”</td><td>‘\b’可以匹配字符与符号的边界，如”,AP”</td></tr></tbody></table><h2 id="3、分组匹配"><a href="#3、分组匹配" class="headerlink" title="3、分组匹配"></a>3、分组匹配</h2><p>可以使用()来对所匹配的字符串进行分组。</p><p><strong>例如：</strong></p><ul><li><p>提取年月日：</p><p>(\d{4})\-(\d{1,2})\-(\d{1,2})</p><p>可以将年-月-日给提取出来：</p><p>“2020-5-31” -&gt; “2020”、”5”、”31”。</p></li><li><p>提取电话号码 ###-########</p><p>^(\d{3,4})-(\d{6,8})$</p><p>^表示开头</p><p>\d{3,4}即3-4位区号</p><p>\d{6,8}即6-8位电话号码</p><p>$表示结束</p><p>在Java中：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">String regex = <span class="string">"^(\\d&#123;3,4&#125;)\\-(\\d&#123;6,8&#125;)$"</span>;</span><br></pre></td></tr></table></figure></li><li><p>提取24小时时间 ##:##</p><p>^([0-1][0-9]|2[0-3])\:([0-5][0-9])$</p><p>[0-1][0-9]表示0~19，然后|表示或，2[0-3]表示20~23，即一共24小时</p><p>[0-5][0-9]则为0~59，共60秒</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">String regexTime = <span class="string">"^([0-1][0-9]|2[0-3]):([0-5][0-9])$"</span>;</span><br></pre></td></tr></table></figure></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.trtan.regex;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.xerces.internal.impl.xpath.regex.Match;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.regex.Matcher;</span><br><span class="line"><span class="keyword">import</span> java.util.regex.Pattern;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RegexTest</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//yyyy-mm-dd</span></span><br><span class="line">        String regexY = <span class="string">".*^(\\d&#123;4&#125;)\\-(\\d&#123;1,2&#125;)\\-(\\d&#123;1,2&#125;)$"</span>;</span><br><span class="line">        <span class="comment">//xxxx-yyyyyyyy</span></span><br><span class="line">        String regex = <span class="string">"^(\\d&#123;3,4&#125;)\\-(\\d&#123;6,8&#125;)$"</span>;</span><br><span class="line">        <span class="comment">//hh:mm</span></span><br><span class="line">        String regexTime = <span class="string">"^([0-1][0-9]|2[0-3]):([0-5][0-9])$"</span>;</span><br><span class="line">        Pattern pattern = Pattern.compile(regexY);</span><br><span class="line">        Matcher matcher = pattern.matcher(<span class="string">"2014-12-21"</span>);</span><br><span class="line">        <span class="keyword">if</span>(matcher.matches()) &#123;</span><br><span class="line">            System.out.println(matcher.group(<span class="number">1</span>));</span><br><span class="line">            System.out.println(matcher.group(<span class="number">2</span>));</span><br><span class="line">            System.out.println(matcher.group(<span class="number">3</span>));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Pattern pattern1 = Pattern.compile(regex);</span><br><span class="line">        Matcher matcher1 = pattern1.matcher(<span class="string">"086-13845785"</span>);</span><br><span class="line">        <span class="keyword">if</span> (matcher1.matches()) &#123;</span><br><span class="line">            System.out.println(matcher1.group(<span class="number">1</span>));</span><br><span class="line">            System.out.println(matcher1.group(<span class="number">2</span>));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Pattern pattern2 = Pattern.compile(regexTime);</span><br><span class="line">        Matcher matcher2 = pattern2.matcher(<span class="string">"21:45"</span>);</span><br><span class="line">        <span class="keyword">if</span> (matcher2.matches()) &#123;</span><br><span class="line">            System.out.println(matcher2.group(<span class="number">1</span>));</span><br><span class="line">            System.out.println(matcher2.group(<span class="number">2</span>));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>正则表达式分组，可以通过Matcher对象快速提取子串。</p><p>group(0)表示匹配整个字符串，group(1)表示匹配第一个子串，…</p><h2 id="4、复杂匹配规则"><a href="#4、复杂匹配规则" class="headerlink" title="4、复杂匹配规则"></a>4、复杂匹配规则</h2><table><thead><tr><th>字符</th><th>样例</th><th>说明</th></tr></thead><tbody><tr><td>^和$</td><td>^A\d{3}$</td><td>‘^’和’$’代表匹配的开头和结尾，如：A123、A845等</td></tr><tr><td>[…]</td><td>[abc]1</td><td>[…]可以匹配范围内的一个字符，如：a1、b1、c1</td></tr><tr><td></td><td>[a-f]1</td><td>如：a1、b1、d1等</td></tr><tr><td></td><td>[a-f0-9_]{6}</td><td>[…]{n}可以匹配范围内的n个字符，如：123f_45、aaacda、123485等</td></tr><tr><td>[^…]</td><td>[^0-9]{6}</td><td>[^…]{n}可以匹配非范围内的n个字符，如ffffff、AOj_s-、hoodss等</td></tr><tr><td>&#124;</td><td>AB&#124;CD</td><td>&#124;或运算，可以匹配多个条件的任意一个，如AB、CD</td></tr><tr><td>\n</td><td>(\d+)(a)\1</td><td>‘\n’表示与第n组括号里的内容相同，如123a123，584a584等</td></tr></tbody></table><p>（补一个MarkDown的问题：要用&amp;#124 ; 表示制表符&#124;）</p><h2 id="5、非贪婪匹配"><a href="#5、非贪婪匹配" class="headerlink" title="5、非贪婪匹配"></a>5、非贪婪匹配</h2><p>如果想实现一个这样的匹配：</p><p>给定一个数字字符串，找出末尾连续0的个数，比如：</p><p>1320000，4个0</p><p>1024000，3个0</p><p>124，0个0</p><p>那么使用<code>^(\d+)(0*)$</code>去匹配，结果是<code>(\d+)</code>将字符串全部匹配了，<code>(0*)</code>只能匹配空串。</p><p>这是因为正则默认使用贪婪匹配，尽可能的向后匹配。</p><p><strong>用<code>?</code>来实现非贪婪匹配，即改为<code>^(\d+?)(0*)$</code>去匹配。</strong>就会尽可能少的去匹配。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">String str = <span class="string">"^(\\d??)(9*)$"</span>;</span><br><span class="line">Pattern pattern4 = Pattern.compile(str);</span><br><span class="line">Matcher matcher4 = pattern4.matcher(<span class="string">"9999"</span>);</span><br><span class="line"><span class="keyword">if</span>(matcher4.matches()) &#123;</span><br><span class="line">    System.out.println(matcher4.group(<span class="number">1</span>));</span><br><span class="line">    System.out.println(matcher4.group(<span class="number">2</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">9999</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><p>对于9999，第一个？表示匹配0个或1个数字，第二个？表示非贪婪匹配，就会按照最少的来匹配，即匹配0个，让后面那组匹配的数量更多一点。</p><h2 id="6、搜索和替换"><a href="#6、搜索和替换" class="headerlink" title="6、搜索和替换"></a>6、搜索和替换</h2><blockquote><p>分割字符串</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//把字符串拆为数组</span></span><br><span class="line"><span class="comment">//初始字符串格式很不规范</span></span><br><span class="line">String example = <span class="string">"1,  2;  3, 4.  5, 6,    7, 8, 9"</span>;</span><br><span class="line">String[] array_s = example.split(<span class="string">"[,.;\\s]+"</span>);</span><br><span class="line">Integer[] array = <span class="keyword">new</span> Integer[array_s.length];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; array.length; i++) &#123;</span><br><span class="line">    array[i] = Integer.parseInt(array_s[i]);</span><br><span class="line">    System.out.println(array[i]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>搜索子串</p></blockquote><p><strong>Matcher.find()</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//搜索text中的Spring</span></span><br><span class="line">String text = <span class="string">"Mock Objects, TestContext Framework, Spring MVC Test, WebTestClient. Spring NB"</span>;</span><br><span class="line">Pattern pattern5 = Pattern.compile(<span class="string">"Spring"</span>);</span><br><span class="line">Matcher matcher5 = pattern5.matcher(text);</span><br><span class="line"><span class="keyword">while</span> (matcher5.find()) &#123;</span><br><span class="line">    String sub = text.substring(matcher5.start(), matcher5.end());</span><br><span class="line">    System.out.println(sub);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>替换字符串</p></blockquote><p>String.replaceAll()</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//比如要去掉text的所有空格，使用' '分割所有单词，然后对每个单词加粗(&lt;br&gt;&lt;/br&gt;包裹)</span></span><br><span class="line">String text = <span class="string">"Mock Objects, TestContext Framework, Spring MVC Test, WebTestClient. Spring NB"</span>;</span><br><span class="line">System.out.println(text.replaceAll(<span class="string">"[\\s,.]+"</span>, <span class="string">" "</span>)</span><br><span class="line">                   .replaceAll(<span class="string">"(\\w+)"</span>, <span class="string">"&lt;br&gt;$1&lt;/br&gt;"</span>));</span><br></pre></td></tr></table></figure><h2 id="7、正则表达式练习网站"><a href="#7、正则表达式练习网站" class="headerlink" title="7、正则表达式练习网站"></a>7、正则表达式练习网站</h2><p><a href="https://alf.nu/RegexGolf" target="_blank" rel="noopener">https://alf.nu/RegexGolf</a></p><p>第一题：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">foo</span><br></pre></td></tr></table></figure><p>第二题：</p><p>以k结尾，可使用”$”，也可使用”\b”表示字符与符号的边界</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">k$</span><br><span class="line">k\b</span><br></pre></td></tr></table></figure><p>第三题：</p><p>以u结尾，但是不允许使用 $ ，那就只能”\b”</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">u\b</span><br></pre></td></tr></table></figure><p>第四题：</p><p>左边前四位为a-f的字母，右边不符合。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">^[a-f]*$</span><br><span class="line">^[a-f]&#123;4&#125;</span><br></pre></td></tr></table></figure><p>第五题：</p><p><strong>新知识：</strong>“\n”表示与第n组括号里的内容相同，如123a123，584a584等</p><p>左边前三位与中间三位相同</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">^(...).*\1</span><br></pre></td></tr></table></figure><p>第六题：</p><p>右边有四位的回文串（abba、otto等）</p><p><strong>新知识：</strong></p><table><thead><tr><th>字符</th><th>样例</th><th>说明</th></tr></thead><tbody><tr><td>(?:pattern)</td><td>industr(?:y&#124;ies)</td><td>不获取匹配结果，不进行存储，可以代替”industry&#124;industries”</td></tr><tr><td>(?=pattern)</td><td>Windows(?=95&#124;98)</td><td>能匹配Windows98、Windows95中的Windows</td></tr><tr><td>(?!pattern)</td><td>Windows(?!95&#124;98)</td><td>能匹配Windows2020中的Windows</td></tr><tr><td>(?&lt;=pattern)</td><td>(?&lt;=95&#124;98)Windows</td><td>能匹配98Windows、95Windows中的Windows</td></tr><tr><td>(?&lt;pattern)</td><td>(?&lt;95&#124;98)Windows</td><td>能匹配2020Windows中的Windows</td></tr></tbody></table><p>从上面表中可以知道，”?=”和”?!”可以用来前瞻匹配，题目要求的是排除回文串，那么使用”?!”。</p><p>首先回文串很容易写<code>(.)(.)\2\1</code>。</p><p>然后<code>^(?!(.)(.)\2\1)</code>这个意思就是不以回文开头，发现右边好多匹配的。</p><p>于是<code>^(?!.*(.)(.)\2\1)</code>允许有前缀，就可以干掉右边匹配的了。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">^(?!.*(.)(.)\2\1)</span><br></pre></td></tr></table></figure><p>第七题：</p><p>发现左边首尾相同且为回文串，右边没有这个特征。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">^(.)(.).*\2\1$</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java正则 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>知识点总结</title>
      <link href="/2019/09/20/%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93/"/>
      <url>/2019/09/20/%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<h2 id="数据库："><a href="#数据库：" class="headerlink" title="数据库："></a>数据库：</h2><ul><li>数据库系统特点：数据结构化、数据独立性高、数据共享性高、冗余性低、易扩展，由DBMS统一管理控制。</li><li>事务是DBMS的基本单位，是用户定义的一组逻辑一致的程序序列。</li></ul><h2 id="JAVA"><a href="#JAVA" class="headerlink" title="JAVA"></a>JAVA</h2><ul><li>Java类的构造方法：构造方法是一种特殊的方法，它必须具备和所在类相同的名字，没有返回值类型，构造方法是在创建一个对象使用new操作符时调用的，作用是初始化对象。</li></ul><h2 id="图"><a href="#图" class="headerlink" title="图"></a>图</h2><ul><li>连通图：连通图中的任意两顶点互达。</li></ul><ul><li>连通分量：无向图的极大连通子图。</li></ul><h2 id="类"><a href="#类" class="headerlink" title="类"></a>类</h2><ul><li>修饰符访问规则</li></ul><p><img src="/2019/09/20/知识点总结/1568969096473.png" alt="56896909647"></p><h2 id="加密"><a href="#加密" class="headerlink" title="加密"></a>加密</h2><ul><li>公钥密码体制：加密和解密采用不同的密钥。对于传统对称密码而言，密文的安全性完全依赖于密钥的保密性，一旦密钥泄漏，将毫无保密性可言。公钥密码体制中，密钥是公开的，只有私钥是需要保密的。知道公钥和密码算法要推测私钥在计算上是不可行的，这样只要私钥是安全的那么加密就是安全的。</li></ul><h2 id="网络"><a href="#网络" class="headerlink" title="网络"></a>网络</h2><p>1、MAC地址长度为48比特。</p><p>2、OSI分层：物理层、数据链路层、网络层、传输层、会话层、表示层、应用层。</p><p>3、TCP/IP分层：网络接口层、网际层、运输层、应用层。</p><p>4、五层协议：物理层、数据链路层、网络层、运输层、应用层。</p><p><a href="https://blog.csdn.net/taotongning/article/details/81352985" target="_blank" rel="noopener">OSI七层协议大白话解读</a></p><ul><li><p>物理层</p><p>实现计算机之间通信底层物理方面的连通，中间的物理链接可以是光缆、电缆、双绞线、无线电波。</p><p>传输的是电信号，即0100…这些二进制串。</p><p>如果要让这些01串有意义，那么必须把电信号做分组，例如8位一组，分组的实现就是数据链路层做的事。</p></li><li><p>数据链路层</p><p>以太网协议EtherNet规定</p><p>一组电信号称为一个数据包，或者叫做一个帧。</p><p>每一个数据帧分成：报头(head)和数据(data)两部分。</p><p>报头包含（固定18字节，一个字节8位）：</p><ul><li>源地址，6个字节</li><li>目的地址，6个字节</li><li>数据类型，6个字节</li></ul><p>数据包含（最短46字节，最长1500字节）：</p><ul><li>数据包的具体内容</li></ul><p>那么 报头长度+数据长度=最短64字节，最长1518字节，超过最大限制就分片发送。</p><p>源地址和目的地址都是指MAC地址。</p><p>MAC地址即网卡的地址（EtherNet规定接入Intenet的设备必须具备网卡）。</p><p>每块网卡上的一个唯一的MAC地址，长度为48位2进制，通常由12位16进制数表示，前六位代表厂商编号，后六位是流水线号。</p><p>有了MAC地址计算机就可以通信了，在一个局域网内，计算机之间通过广播的方式进行通信，即将源地址、目的地址及数据构成一个数据帧，通过广播的方式发送出去，那么所有其它机器都会接收到这个包，都会拆开包查看目的地址是否是自己，只要不是自己就丢弃掉。那么接收到的机器以同样的方式发送数据帧，实现计算机之间的通信。</p><p>但是全世界并不是一个局域网，也不可能是一个局域网，所以就有了网络层。</p></li><li><p>网络层</p><p>MAC地址是用来标识计算机在某个局域网的具体位置，IP地址则是标识计算机在哪个局域网。比如要访问百度，肯定要知道百度的ip地址，计算机在发包之前会判断你在哪个局域网，对方在哪个局域网，如果处于同一局域网，基于mac地址的广播发包就可以了。如果不在同一局域网下，那么就会把你个包交给网关来转发。MAC地址和IP地址唯一标识了你在互联网中的位置。</p><p>数据链路层会把网络层的数据包封装到数据链路层的数据位置，再加上自己的包头，再发给物理层，物理层发给网关，网关再发送给对方局域网的网关，对方网关在那个局域网做广播。</p><p>在数据链路层看，数据封装了两层：</p><p><img src="/2019/09/20/知识点总结/1569118561711.png" alt="56911856171"></p><p>那么在广播之前如何知道对方的MAC地址，这就得靠ARP协议。</p><p>在获取对方的MAC地址之前，首先需要发送一个ARP包，ARP也是靠广播的方式发，如下：</p><p><img src="/2019/09/20/知识点总结/1569118872697.png" alt="56911887269"></p><p>在局域网中，获取对方MAC地址：</p><p>首先需要知道对方的IP地址，自己的IP以及MAC地址都能得到，目标MAC为12个F，称之为广播地址。意思就是想要获取172.16.10.11的机器的MAC地址，计算机的MAC地址永远不可能是12个F，假设在一个局域网内广播，所有机器都会开始解包，但是只有172.16.10.11这个机器才会返回它的MAC地址，发回来的源MAC改成它自己的MAC地址，同时把自己的MAC地址放入数据部分。</p><p>跨网络获取对方的MAC地址：</p><p>通过IP地址区分，计算机判断目标地址不再同一个局域网下，目标IP就变成了网关IP了，网关IP可以在计算机上获取</p><p><img src="/2019/09/20/知识点总结/1569120493317.png" alt="56912049331"></p><p><img src="/2019/09/20/知识点总结/1569120502058.png" alt="56912050205"></p><p>这样网关就会把它的MAC地址给你，然后正常发包：</p><p><img src="/2019/09/20/知识点总结/1569120535207.png" alt="56912053520"></p><p>网关帮你去找目标用户，但是用户根本就感觉不到。</p></li><li><p>传输层</p><p>网络层的IP用于区分子网，MAC帮助找到主机，然后大家使用的都是应用程序，那么你的电脑可能同时开启多个应用程序，比如QQ、微信等。</p><p>那么我们通过IP和MAC找到了一台特定的主机，如何标识这台主机上的应用程序，答案就是端口。端口即为应用程序与网卡关联的编号。</p><p>传输层功能就是建立端口到端口的通信。</p><p>端口范围：0~65535，0~1023为系统占用端口。</p><ul><li><p>TCP协议</p><p>可靠传输，TCP数据包没有长度限制，理论上可以无限长，但是为了保证网络的效率，通常TCP数据包的长度不会超过IP数据包的长度，以确保单个TCP数据包不必再分割。</p></li><li><p>UDP协议</p><p>不可靠传输，“报头”一共只有8个字节，总长度不超过65535字节，正好放入一个IP数据包。</p></li></ul></li><li><p>应用层</p><p>用户使用的都是应用程序，均工作与应用层，互联网是开发的，大家都可以开发自己的应用程序，数据多种多样，必须规定好数据的组织形式。</p><p>功能：规定应用程序的数据格式。</p><p>比如：TCP协议可以为各种各样的程序传递数据，比如Email、www、FTP等，那么必须有不同协议规定电子邮件、网页、FTP数据的格式，这些应用程序协议就构成了应用层。</p></li></ul><p>5、计算机内的传输是并行传输，而通信线路上的传输是串行传输。</p><p>6、在操作系统中，一组程序按独立异步的速度执行，无论从微观还是宏观，程序都是一起执行的。</p><ul><li>并发：在同一个时间段内，两个或多个程序执行，有时间上的重叠（宏观上是同时，微观上仍是顺序执行），也可以说是多个线程的轮流执行（单核CPU）。</li><li>并行：多个线程同时执行（多核CPU），微观上是同时的。</li><li>串行：就是一个一个执行，处理完一个才能处理下一个。</li></ul><p>7、中继器：是工作在物理层的连接设备，适用于完全相同两类网络的互连，主要功能是通过对数据信号的重新发送或转发，来扩大网络传输的距离。</p><p>8、各层设备</p><ul><li>物理层：转发器、集线器。</li><li>数据链路层：适配器、网桥。</li><li>网络层：路由器。</li></ul><p>第三层以上的功能都是由软件实现，没有硬件设备与之对应。</p><h2 id="操作系统"><a href="#操作系统" class="headerlink" title="操作系统"></a>操作系统</h2><p>1、设计现代操作系统的主要目标是什么？</p><p>方便性、有效性、可扩充性、开发性。</p><p>2、树形目录解决了文件的重名问题，可以在不同目录下建立相同文件名的文件。</p><p>3、在虚拟内存管理中，地址变换机构将逻辑地址变为物理地址，形成该逻辑地址的阶段是链接。</p><p>以C语言为例：C语言经过预处理、编译、汇编、链接、生成可执行文件。其中链接的前一步产生了可重定位的二进制目标文件。</p><p>C语言采用源文件独立编译的方式，如程序main.c、file1.c、file2.c、file1.h、file2.h，在链接前一步生成了main.0、file1.o、file2.o，链接器将这三个文件和其它库文件链接成一个可执行文件。链接阶段完成了重定向，形成了逻辑的地址空间。</p><p>4、Linux的虚拟内存空间</p><p>为了防止不同进程在同一时刻在物理内存中运行而对物理内存的争夺，采用了虚拟内存。</p><p>虚拟内存技术使得不同进程在运行过程中，它看到的是自己独自占用了当前系统的内存。所有进程共享同一物理内存，每个进程只是把自己目前需要的虚拟内存空间映射并存储到物理地址上。事实上，在每个进程创建的时候，内核只是为进程创建了虚拟内存的布局，具体就是初始化进程控制表中内存相关的链表，实际上并不立即就把虚拟内存对应位置的数据和代码拷贝到物理内存中，只是建立好虚拟内存和物理内存之间的映射，等到运行对应程序时，才会通过缺页异常，来拷贝数据。还有进程运行过程中要动态分配内存，如malloc、new，也只是分配了虚拟内存，即为这块虚拟内存对应的页表项做相应设置，当进程真正访问到此数据时，才发生缺页异常。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2019/09/01/%E7%BD%91%E7%AB%99%E9%83%A8%E7%BD%B2/"/>
      <url>/2019/09/01/%E7%BD%91%E7%AB%99%E9%83%A8%E7%BD%B2/</url>
      
        <content type="html"><![CDATA[<h1 id="Linux网站部署"><a href="#Linux网站部署" class="headerlink" title="Linux网站部署"></a>Linux网站部署</h1><h2 id="部署Apache"><a href="#部署Apache" class="headerlink" title="部署Apache"></a>部署Apache</h2><p>环境:CentOS 7</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line">更新操作系统</span><br><span class="line">yum clean all</span><br><span class="line"></span><br><span class="line">yum -y update</span><br><span class="line"></span><br><span class="line">安装apache</span><br><span class="line">yum -y install httpd</span><br><span class="line"></span><br><span class="line">启动apache</span><br><span class="line"></span><br><span class="line">设置开机自启:</span><br><span class="line">systemctl <span class="built_in">enable</span> httpd.service</span><br><span class="line">启动:</span><br><span class="line">systemctl start httpd.service</span><br><span class="line"></span><br><span class="line">打开浏览器访问云主机ip地址可看到apache测试页面</span><br><span class="line"></span><br><span class="line">配置虚拟主机</span><br><span class="line">将文件放入/var/www目录下</span><br><span class="line"></span><br><span class="line">mkdir -p /var/www/edu.cloud.tencent.com/public_html</span><br><span class="line">修改属主 权限</span><br><span class="line">chown -R apache:apache /var/www/edu.cloud.tencent.com/public_html</span><br><span class="line">chown -R 755 /var/www</span><br><span class="line"></span><br><span class="line">创建首页文件,作为测试</span><br><span class="line">vim /var/www/edu.cloud.tencent.com/public_html/index.html</span><br><span class="line"></span><br><span class="line">创建apatch配置文件</span><br><span class="line"></span><br><span class="line">一般将apache配置文件放在两个目录中,一个目录放置所有的apache文件,另一个放置启用虚拟主机的apache文件.</span><br><span class="line"></span><br><span class="line">创建两个目录</span><br><span class="line">mkdir /etc/httpd/sites-available</span><br><span class="line">mkdir /etc/httpd/sites-enabled</span><br><span class="line"></span><br><span class="line">修改默认配置文件</span><br><span class="line">vim /etc/httpd/conf/httpd.conf</span><br><span class="line">在最后一行加入:</span><br><span class="line">IncludeOptional sites-enabled/*.conf</span><br><span class="line"></span><br><span class="line">表示加载sites-enabled下的conf文件</span><br><span class="line"></span><br><span class="line">创建虚拟主机的配置文件</span><br><span class="line">vim /etc/httpd/sites-available/edu.cloud.tencent.com.conf</span><br><span class="line"></span><br><span class="line">输入以下内容:</span><br><span class="line">&lt;VirtualHost *:80&gt;</span><br><span class="line"></span><br><span class="line">ServerName edu.cloud.tencent.com</span><br><span class="line">DocumentRoot /var/www/edu.cloud.tencent.com/public_html</span><br><span class="line">ErrorLog /var/www/edu.cloud.tencent.com/error.log</span><br><span class="line">CustomLog /var/www/edu.cloud.tencent.com/requests.log combined</span><br><span class="line">&lt;/VirtualHost&gt;</span><br><span class="line"></span><br><span class="line">使用软链接连接配置文件</span><br><span class="line">ln -s /etc/httpd/sites-available/edu.cloud.tencent.com.conf /etc/httpd/sites-enabled/edu.cloud.tencent.com.conf</span><br><span class="line"></span><br><span class="line">可以检测新的软链接是否正常</span><br><span class="line">cat /etc/httpd/sites-enabled/edu.cloud.tencent.com.conf</span><br><span class="line"></span><br><span class="line">以及检查DocumentRoot配置是否正确</span><br><span class="line"><span class="built_in">cd</span> /var/www/edu.cloud.tencent.com/public_html/</span><br><span class="line">ls</span><br><span class="line"></span><br><span class="line">重启apache</span><br><span class="line">apachectl restart</span><br><span class="line"></span><br><span class="line">然后打开浏览器,访问对应地址就能看到index.html的页面了.</span><br></pre></td></tr></table></figure><h2 id="部署Nginx"><a href="#部署Nginx" class="headerlink" title="部署Nginx"></a>部署Nginx</h2><p>环境: CentOS 7</p><p>注意:在配置完成虚拟主机后,需要执行<code>nginx -t</code>,检测配置文件是否正确,然后使用<code>service nginx reload</code>重启Nginx.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">安装 epel</span><br><span class="line">yum install epel-release -y</span><br><span class="line"></span><br><span class="line">安装Nginx</span><br><span class="line">yum -y install nginx</span><br><span class="line"></span><br><span class="line">启动Nginx</span><br><span class="line">systemctl start nginx.service</span><br><span class="line"></span><br><span class="line">打开浏览器访问云主机ip地址,可访问默认位置</span><br><span class="line">创建网站根目录,这里使用Apache的根目录</span><br><span class="line">mkdir -p /var/www/edu.cloud.tencent.com/public_html</span><br><span class="line">vim /var/www/edu.cloud.tencent.com/public_html/index.html</span><br><span class="line"></span><br><span class="line">修改配置文件</span><br><span class="line">vim /etc/ngnix/conf.d/virtual.conf</span><br><span class="line">添加如下代码</span><br><span class="line"></span><br><span class="line">server&#123;</span><br><span class="line">    listen 80; //监听端口</span><br><span class="line">    server_name edu.cloud.tecent.com; //对应主机名</span><br><span class="line">    root /var/www/edu.cloud.tecent.com/public_html; //网站根目录</span><br><span class="line">    index index.html; //默认页面s</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">检查配置文件是否正常</span><br><span class="line">nginx -t</span><br><span class="line"></span><br><span class="line">重启nginx</span><br><span class="line">systemctl restart nginx.service</span><br><span class="line"></span><br><span class="line">访问对应地址</span><br></pre></td></tr></table></figure><h2 id="部署MySQL"><a href="#部署MySQL" class="headerlink" title="部署MySQL"></a>部署MySQL</h2><p>环境：CentOS 7</p><p>注意事项：安装完成后，要配置mysql密码，并进行<code>mysql_secure_installtion</code>，以免出现安全问题。</p><p>配置完成后可以执行show databases;查看MySQL是否配置成功。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">安装mariadb，在CentOS7中使用了mariadb替代了官方的MySQL</span><br><span class="line">yum install mariadb-server -y</span><br><span class="line"></span><br><span class="line">启动MySQL数据库</span><br><span class="line">systemctl start mariadb.service</span><br><span class="line"></span><br><span class="line">进行安全配置</span><br><span class="line">mysql_secure_installation</span><br><span class="line">输入默认密码，默认为空，直接回车</span><br><span class="line">设置用户密码，按y</span><br><span class="line">输入两次密码</span><br><span class="line">是否删除匿名用户</span><br><span class="line">关闭root用户的远程登录</span><br><span class="line">是否删除测试数据库，和相关权限</span><br><span class="line">是否刷新权限</span><br><span class="line"></span><br><span class="line">mysql -uroot -p</span><br><span class="line">输入密码</span><br><span class="line">查看数据库</span><br><span class="line">show database;</span><br><span class="line"></span><br><span class="line">退出数据库</span><br><span class="line">exit;</span><br></pre></td></tr></table></figure><h2 id="部署Laravel"><a href="#部署Laravel" class="headerlink" title="部署Laravel"></a>部署Laravel</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">安装第三方仓库</span><br><span class="line">yum instal epel-release</span><br><span class="line"></span><br><span class="line">安装webtatic仓库，包含php7</span><br><span class="line">rpm -Uvh https://mirror.webtatic.com/yum/e17/webtatic-release.rpm</span><br><span class="line"></span><br><span class="line">yum update</span><br><span class="line"></span><br><span class="line">按照php7一系列拓展</span><br><span class="line">yum install -y php70w php70w-mysql php70w-mcrypt php70w-dom php70w-mbstring</span><br><span class="line"></span><br><span class="line">安装composer</span><br><span class="line">curl -sS https://getcomposer.org/installer | php</span><br><span class="line"></span><br><span class="line">移动到系统目录</span><br><span class="line">mv composer.phar /usr/bin/composer</span><br><span class="line"></span><br><span class="line">添加执行权限</span><br><span class="line">chmod +x /usr/bin/composer</span><br><span class="line"></span><br><span class="line">查看composer信息</span><br><span class="line">composer -V</span><br><span class="line"></span><br><span class="line">配置国内镜像</span><br><span class="line">composer config -g repo.packagist composer https://packagist.phpcomposer.com</span><br><span class="line"></span><br><span class="line">配置Laravel环境</span><br><span class="line">cd /var/www</span><br><span class="line"></span><br><span class="line">展示apache目录下的文件</span><br><span class="line">ls</span><br><span class="line"></span><br><span class="line">创建laravel项目</span><br><span class="line">composer create-project laravel/laravel test</span><br><span class="line"></span><br><span class="line">查看</span><br><span class="line">ll</span><br><span class="line"></span><br><span class="line">修改test目录权限</span><br><span class="line">chown apache:apache -R test</span><br><span class="line"></span><br><span class="line">修改配置文件</span><br><span class="line">vim /etc/httpd/conf.d/test.conf</span><br><span class="line"></span><br><span class="line">修改如下：</span><br><span class="line">&lt;VirtualHost *:80&gt;</span><br><span class="line">ServerName test.cloud.tencent.com</span><br><span class="line">DocumentRoot /var/www/test/public</span><br><span class="line">&lt;/VirtualHost&gt;</span><br><span class="line"></span><br><span class="line">重启apache</span><br><span class="line">systemctl restart httpd</span><br><span class="line"></span><br><span class="line">打开浏览器测试网站</span><br></pre></td></tr></table></figure><h2 id="部署Django"><a href="#部署Django" class="headerlink" title="部署Django"></a>部署Django</h2><p>注意事项：</p><p>使用Nginx反向代理Django提升负载能力。</p><p>使用uwsgi来进行请求的转发处理。</p><p>使用supervisord来进行uwsgi的自动启动。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2019/08/31/%E8%85%BE%E8%AE%AF%E4%BA%91centos7%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99/"/>
      <url>/2019/08/31/%E8%85%BE%E8%AE%AF%E4%BA%91centos7%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99/</url>
      
        <content type="html"><![CDATA[<h1 id="腾讯云CentOS7-6搭建个人网站"><a href="#腾讯云CentOS7-6搭建个人网站" class="headerlink" title="腾讯云CentOS7.6搭建个人网站"></a>腾讯云CentOS7.6搭建个人网站</h1><p>首先，要有一个云服务器，我用的是CentOS7.6.</p><h2 id="文件的上传与下载"><a href="#文件的上传与下载" class="headerlink" title="文件的上传与下载"></a>文件的上传与下载</h2><p>需要上传下载文件,需要使用rz和sz,但是安装后发现在putty使用不了.</p><p>查看官方文档:<a href="https://cloud.tencent.com/document/product/213/2131" target="_blank" rel="noopener">https://cloud.tencent.com/document/product/213/2131</a></p><p>通过WinSCP可以进行文件的上传下载.</p><p><img src="/2019/08/31/腾讯云centos7搭建个人网站/D:/blog\hexo\source\Typro-img\1567216083140.png" alt="56721608314"></p><h2 id="安装相关软件"><a href="#安装相关软件" class="headerlink" title="安装相关软件"></a>安装相关软件</h2><h3 id="安装JDK"><a href="#安装JDK" class="headerlink" title="安装JDK"></a>安装JDK</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install java-1.8.0-openjdk.x86_64</span><br></pre></td></tr></table></figure><p><img src="/2019/08/31/腾讯云centos7搭建个人网站/D:/blog\hexo\source\Typro-img\1567216653480.png" alt="56721665348"></p><p>检查一下:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -version</span><br></pre></td></tr></table></figure><p><img src="/2019/08/31/腾讯云centos7搭建个人网站/D:/blog\hexo\source\Typro-img\1567216691326.png" alt="56721669132"></p><h3 id="安装Mysql"><a href="#安装Mysql" class="headerlink" title="安装Mysql"></a>安装Mysql</h3><p>据网上说yum上的的mysql资源有问题,所以不仅仅只用yum,需要使用其它命令获取mysq社区版.</p><p>下载:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mkdir download</span><br><span class="line">cd dowload/</span><br><span class="line">wget http://repo.mysql.com/mysql-community-release-el7-5.noarch.rpm </span><br><span class="line">rpm -ivh mysql-community-release-el7-5.noarch.rpm</span><br></pre></td></tr></table></figure><p>安装:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install mysql mysql-server mysql-devel -y</span><br></pre></td></tr></table></figure><p>结果速度太慢了,等不了,后面还是直接安装算了.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install mysql</span><br></pre></td></tr></table></figure><p>结果挂了.</p><p>找到一篇博客:<a href="https://www.cnblogs.com/yaowen/p/9486138.html" target="_blank" rel="noopener">https://www.cnblogs.com/yaowen/p/9486138.html</a></p><p>先试试.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">rpm -pa | grep mysql //找出安装mysql的软件包和依赖包</span><br><span class="line">yum remove mysql-xxx-xxx- //依次删除</span><br><span class="line"></span><br><span class="line">find / -name mysql //查找配置文件</span><br><span class="line"></span><br><span class="line">rm -rf xxxx/xx/xx //依次删除</span><br></pre></td></tr></table></figure><p>使用官网提供的mysql repo源:</p><p><img src="/2019/08/31/腾讯云centos7搭建个人网站/D:/blog\hexo\source\Typro-img\1567222078283.png" alt="56722207828"></p><p>使用WinSCP传到CentOS.</p><p><img src="/2019/08/31/腾讯云centos7搭建个人网站/D:/blog\hexo\source\Typro-img\1567222239790.png" alt="56722223979"></p><p>安装yum repo文件并更新yum缓存:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -ivh mysql57-community-release-el7-3.noarch.rpm</span><br></pre></td></tr></table></figure><p>不行的话加两个参数:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -ivh mysql57-community-release-el7-3.noarch.rpm --nodeps --force</span><br></pre></td></tr></table></figure><p>然后会在/etc/yum.repos.d/目录下生成两个repo文件mysql-community.repo mysql-community-source.repo</p><p>更新yum命令:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum clean all</span><br><span class="line">yum makecache</span><br></pre></td></tr></table></figure><p>使用yum命令安装mysql</p><p>查看本地yum仓库中mysql版本:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum repolist all | grep mysql</span><br></pre></td></tr></table></figure><p>安装mysql:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install mysql-community-server</span><br></pre></td></tr></table></figure><p>开启mysql服务:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>获取初始密码:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /var/log/mysqld.log | grep password</span><br></pre></td></tr></table></figure><p><img src="/2019/08/31/腾讯云centos7搭建个人网站/D:/blog\hexo\source\Typro-img\1567224509877.png" alt="56722450987"></p><p>使用初始密码登录mysql:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="/2019/08/31/腾讯云centos7搭建个人网站/D:/blog\hexo\source\Typro-img\1567224562929.png" alt="56722456292"></p><p>修改初始密码:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER USER &apos;root&apos;@&apos;localhost&apos; IDENTIFIED BY &apos;Trtan@123456&apos;;</span><br></pre></td></tr></table></figure><p><img src="/2019/08/31/腾讯云centos7搭建个人网站/D:/blog\hexo\source\Typro-img\1567224725798.png" alt="56722472579"></p><p>防火墙设置:</p><p>CentOS7默认使用的是firewall作为防火墙，这里改为的iptables防火墙.</p><p>关闭firewall防火墙:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop firewalld.service</span><br><span class="line">systemctl disable firewalld.service</span><br><span class="line">systemctl mask firewalld.service</span><br></pre></td></tr></table></figure><p>安装iptables防火墙:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable iptables</span><br><span class="line">systemctl start iptables</span><br><span class="line"></span><br><span class="line">//编辑防火墙增加端口 防火墙文件位置为： /etc/sysconfig/iptables</span><br><span class="line"></span><br><span class="line">vim /etc/sysconfig/iptables</span><br><span class="line">在倒数第三行上增加</span><br><span class="line">-A INPUT -p tcp -m state --state NEW -m tcp --dport 3306 -j ACCEPT</span><br></pre></td></tr></table></figure><p>重启防火墙:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable iptables.service</span><br><span class="line">systemctl start iptables.service</span><br></pre></td></tr></table></figure><p>将mysql服务加入到开机启动项:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable mysqld.service</span><br><span class="line">systemctl start mysqld.service</span><br></pre></td></tr></table></figure><p>常用的mysql服务命令:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">登录mysql: mysql -u username -p</span><br><span class="line">退出mysql: quit</span><br><span class="line">启动mysql: systemctl start mysqld.service</span><br><span class="line">停止mysql: systemctl stop mysqld.service</span><br><span class="line">重启mysql: systemctl restart mysqld.service</span><br><span class="line">开机自启: systemctl enable mysqld.service</span><br><span class="line">查看版本号: select version();</span><br></pre></td></tr></table></figure><p><img src="/2019/08/31/腾讯云centos7搭建个人网站/D:/blog\hexo\source\Typro-img\1567224982735.png" alt="56722498273"></p><h3 id="Navicat连接Mysql"><a href="#Navicat连接Mysql" class="headerlink" title="Navicat连接Mysql"></a>Navicat连接Mysql</h3><p>修改mysql数据库下的user表中host的值:</p><p><img src="/2019/08/31/腾讯云centos7搭建个人网站/D:/blog\hexo\source\Typro-img\1567225390270.png" alt="56722539027"></p><p>更改 “mysql” 数据库里的 “user” 表里的 “host” 项，从”localhost”改称”%”登录mysql数据库 :</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">update user set host=&apos;%&apos; where user=&apos;root&apos;;</span><br></pre></td></tr></table></figure><p><img src="/2019/08/31/腾讯云centos7搭建个人网站/D:/blog\hexo\source\Typro-img\1567225477279.png" alt="56722547727"></p><p>授权,赋予任何主机访问数据的权限:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GRANT ALL PRIVILEGES ON *.* TO &apos;root&apos;@&apos;%&apos;WITH GRANT OPTION;</span><br><span class="line">FLUSH PRIVILEGES;</span><br></pre></td></tr></table></figure><p>Navicat连接:</p><p>说实话,很坑,网上的教程大多不可行,选择一个准确的教程是真难…</p><p><a href="https://blog.csdn.net/qq_41210698/article/details/89817038" target="_blank" rel="noopener">https://blog.csdn.net/qq_41210698/article/details/89817038</a></p><p>首先要配置云服务器,设定一个安全组,</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0.0.0.0/0 TCP:3306</span><br></pre></td></tr></table></figure><p>然后就可以在Navicat客户端设置连接属性了:</p><p><img src="/2019/08/31/腾讯云centos7搭建个人网站/D:/blog\hexo\source\Typro-img\1567230676985.png" alt="56723067698"></p><p>可能会有1251错误,mysql8 之前的版本中加密规则是mysql_native_password,而在mysql8之后,加密规则是caching_sha2_password.</p><p>解决问题方法有两种：</p><ul><li>方法1.升级navicat驱动；(我官网下载目前最新的Navicat 12 for MySQL是可以直接连上的)</li><li>方法2.把mysql用户登录密码加密规则还原成mysql_native_password.</li></ul><p>这里采用方法2解决，具体操作步骤如下：</p><p>用如下命令查看用户信息,看plugin</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select host,user,plugin,authentication_string from mysql.user;</span><br></pre></td></tr></table></figure><p>用如下命令修改密码:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER USER &apos;root&apos;@&apos;%&apos; IDENTIFIED WITH mysql_native_password BY &apos;newpassword&apos;;</span><br></pre></td></tr></table></figure><p>这样回到客户端就可以成功连接了.</p><p><img src="/2019/08/31/腾讯云centos7搭建个人网站/D:/blog\hexo\source\Typro-img\1567230804395.png" alt="56723080439"></p><p><img src="/2019/08/31/腾讯云centos7搭建个人网站/D:/blog\hexo\source\Typro-img\1567230813670.png" alt="56723081367"></p><p>那么我们就有了一个远程的Mysql服务器了.</p><h2 id="安装Tomcat9"><a href="#安装Tomcat9" class="headerlink" title="安装Tomcat9"></a>安装Tomcat9</h2><p><img src="/2019/08/31/腾讯云centos7搭建个人网站/D:/blog\hexo\source\Typro-img\1567233907333.png" alt="56723390733"></p><p>首先去官网下载,在Core中的第二项,然后上传至CentOs.</p><p><img src="/2019/08/31/腾讯云centos7搭建个人网站/D:/blog\hexo\source\Typro-img\1567234075721.png" alt="56723407572"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local</span><br><span class="line">mkdir tomcat</span><br><span class="line">cd ~</span><br><span class="line">cd download/</span><br><span class="line">mv mv apache-tomcat-9.0.24.tar.gz /usr/local/tomcat</span><br></pre></td></tr></table></figure><p>使用tar命令解压安装tomcat文件.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf apache-tomcat-9.0.24.tar.gz</span><br></pre></td></tr></table></figure><p>配置tomcat开机自启:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/lib/systemd/system</span><br><span class="line">vi tomcat.service</span><br><span class="line"></span><br><span class="line">插入一下内容:</span><br><span class="line"></span><br><span class="line">Description=Tomcat</span><br><span class="line">After=syslog.target network.target remote-fs.target nss-lookup.target</span><br><span class="line">  </span><br><span class="line">[Service]</span><br><span class="line">Type=oneshot</span><br><span class="line">ExecStart=/usr/local/tomcat/apache-tomcat-9.0.11/bin/startup.sh　　# 解压目录下的startup.sh</span><br><span class="line">ExecStop=/usr/local/tomcat/apache-tomcat-9.0.11/bin/shutdown.sh　　# 解压目录下的shutdown.sh</span><br><span class="line">ExecReload=/bin/kill -s HUP $MAINPID</span><br><span class="line">RemainAfterExit=yes</span><br></pre></td></tr></table></figure><p>然后:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable tomcat.service</span><br></pre></td></tr></table></figure><p>其它相关命令:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">systemctl start tomcat.service    # 启动tomcat</span><br><span class="line"></span><br><span class="line">systemctl stop tomcat.service    # 关闭tomcat   </span><br><span class="line"></span><br><span class="line">systemctl restart tomcat.service    # 重启tomcat</span><br></pre></td></tr></table></figure><p>启动和结束tomcat也可以到tomcat的安装目录的bin目录下执行shutdown.sh  startup.sh来完成.</p><p>之后设置防火墙:</p><p>下面是firewall的,</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --zone=public --list-ports　　# 查看防火墙开放的所有端口</span><br><span class="line">firewall-cmd --zone=public --add-port=8080/tcp --permanent　　# 添加开放端口</span><br></pre></td></tr></table></figure><p>那么iptables的话就在/etc/sysconfig/iptables添加</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/sysconfig/iptables</span><br><span class="line">在倒数第三行上增加</span><br><span class="line">-A INPUT -p tcp -m state --state NEW -m tcp --dport 8080 -j ACCEPT</span><br></pre></td></tr></table></figure><p>然后可以查看</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iptables -L -n</span><br></pre></td></tr></table></figure><p>使用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ss -tnpl |grep 8080</span><br></pre></td></tr></table></figure><p>可查看端口是否存在,是否成功启动.</p><p>然后访问ip:端口号即可访问主页.</p><p><img src="/2019/08/31/腾讯云centos7搭建个人网站/D:/blog\hexo\source\Typro-img\1567240737723.png" alt="56724073772"></p><p>总算是结束了,坑了一下午…</p><p>坑好多,有的就没记录,太费时间了,很难受.</p><p>可以修改tomcat端口,找到tomcat下conf/server.xml,修改为对应值就行了,不过得设置防火墙.</p><p><img src="/2019/08/31/腾讯云centos7搭建个人网站/D:/blog\hexo\source\Typro-img\1567240965926.png" alt="56724096592"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2019/08/30/%E7%8E%A9%E8%BD%AC%E8%85%BE%E8%AE%AF%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
      <url>/2019/08/30/%E7%8E%A9%E8%BD%AC%E8%85%BE%E8%AE%AF%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<hr><p>8月30</p><p>腾讯云，免费体验15天，先试试。</p><p>然后1块钱买了个.xyz的域名。</p><h3 id="登录："><a href="#登录：" class="headerlink" title="登录："></a>登录：</h3><h4 id="使用标准登录方式登录Linux"><a href="#使用标准登录方式登录Linux" class="headerlink" title="使用标准登录方式登录Linux"></a>使用标准登录方式登录Linux</h4><p>官方文档：<a href="https://cloud.tencent.com/document/product/213/5436" target="_blank" rel="noopener">https://cloud.tencent.com/document/product/213/5436</a></p><p>操作场景（WeShell）：</p><p>优点：</p><ul><li>支持快捷键复制粘贴</li><li>支持鼠标滚屏</li><li>支持中文输入法</li><li>安全性高，每次登录需要输入密码或密钥。</li></ul><p>适用本地操作系统：Windows、Linux、Mac OS</p><p>前提条件：已经获取管理员账号及密码，可从站内信箱获取。</p><p>点击登录：</p><p><img src="/2019/08/30/玩转腾讯云服务器/D:/blog\hexo\source\Typro-img\1567173295278.png" alt="56717329527"></p><p>在弹出的窗口点击立即登录：</p><p><img src="/2019/08/30/玩转腾讯云服务器/D:/blog\hexo\source\Typro-img\1567173358112.png" alt="56717335811"></p><p>输入登录密码：<br><img src="/2019/08/30/玩转腾讯云服务器/D:/blog\hexo\source\Typro-img\1567173412238.png" alt="56717341223"></p><p>即进入到终端界面，成功连上云服务器：<br><img src="/2019/08/30/玩转腾讯云服务器/D:/blog\hexo\source\Typro-img\1567173444760.png" alt="56717344476"></p><h4 id="使用ssh远程登录Linux"><a href="#使用ssh远程登录Linux" class="headerlink" title="使用ssh远程登录Linux"></a>使用ssh远程登录Linux</h4><p>操作场景：</p><p>在Linux或Mac OS系统的本地电脑通过SSH登录远程Linux。</p><p>适用本地操作系统：Linux、Mac OS</p><p>需要先创建SSH密钥：</p><ul><li>登录云服务器控制台，在左侧导航栏，单击SSH密钥。</li><li>输入密钥名称，点击确定。</li><li>下载密钥。</li></ul><p>再进行密钥的绑定：</p><ul><li>在云服务器控制台，在左侧导航栏，单击SSH密钥。</li><li>选择要绑定的密钥。</li></ul><p>待更新</p><h4 id="使用远程登陆软件登录Linux"><a href="#使用远程登陆软件登录Linux" class="headerlink" title="使用远程登陆软件登录Linux"></a>使用远程登陆软件登录Linux</h4><p>官方文档：<a href="https://cloud.tencent.com/document/product/213/35699" target="_blank" rel="noopener">https://cloud.tencent.com/document/product/213/35699</a></p><p>下载 Windows 远程登录软件，即 PuTTY。<a href="https://www.chiark.greenend.org.uk/~sgtatham/putty/latest.html" target="_blank" rel="noopener">点此获取</a></p><p>使用密码登录：</p><p>在 PuTTY Configuration 窗口中，输入以下内容。如下图所示：</p><p><img src="/2019/08/30/玩转腾讯云服务器/D:/blog\hexo\source\Typro-img\1567174959269.png" alt="56717495926"></p><p>要确保远程机器处于开机状态。</p><p>输入账号密码就登录了云服务器：</p><p><img src="/2019/08/30/玩转腾讯云服务器/D:/blog\hexo\source\Typro-img\1567175013603.png" alt="56717501360"></p><p>使用密钥登录：</p><p>打开PuTTY Key Generator：</p><p><img src="/2019/08/30/玩转腾讯云服务器/D:/blog\hexo\source\Typro-img\1567175131284.png" alt="56717513128"></p><p>点击load选择密钥文件：</p><p><img src="/2019/08/30/玩转腾讯云服务器/D:/blog\hexo\source\Typro-img\1567176169830.png" alt="56717616983"></p><p>点击Save private key，指定文件名后缀为.ppk</p><p>打开PuTTY，在左侧导航栏中，选择【Connection】&gt;【SSH】&gt;【Auth】，进入 Auth 配置界面。</p><p>选择密钥文件：</p><p><img src="/2019/08/30/玩转腾讯云服务器/D:/blog\hexo\source\Typro-img\1567176402650.png" alt="56717640265"></p><p>回到session，填写信息：</p><p><img src="/2019/08/30/玩转腾讯云服务器/D:/blog\hexo\source\Typro-img\1567176474307.png" alt="56717647430"></p><p>点击open，即可直接连接，无需输入密码：</p><p><img src="/2019/08/30/玩转腾讯云服务器/D:/blog\hexo\source\Typro-img\1567176601941.png" alt="56717660194"></p><p>那么就到这了。</p><p>下面进行ubuntu的可视化：</p><h3 id="ubuntu可视化"><a href="#ubuntu可视化" class="headerlink" title="ubuntu可视化"></a>ubuntu可视化</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line"></span><br><span class="line">sudo apt-get install xinit</span><br><span class="line">sudo apt-get install gdm  ( 登陆窗口，用于管理账户登陆的，还可以用来切换别的桌面环境。 )</span><br><span class="line">sudo apt-get install ubuntu-desktop</span><br></pre></td></tr></table></figure><hr><p>告辞！！！</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Android目录</title>
      <link href="/2019/06/01/Android%E7%9B%AE%E5%BD%95/"/>
      <url>/2019/06/01/Android%E7%9B%AE%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<p>目录结构：</p><p><img src="/2019/06/01/Android目录/1559388976443.png" alt="55938897644"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">manifests //全局描述文件</span><br><span class="line">java //java源码文件</span><br><span class="line">res //资源文件（布局文件、图片资源文件）</span><br></pre></td></tr></table></figure><p><img src="/2019/06/01/Android目录/1559389131031.png" alt="55938913103"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">AndroidMainFest.xml 全局描述文件</span><br></pre></td></tr></table></figure><p><img src="/2019/06/01/Android目录/1559389165075.png" alt="55938916507"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">icon 应用图标</span><br><span class="line">label 应用标签</span><br></pre></td></tr></table></figure><p><img src="/2019/06/01/Android目录/1559389210360.png" alt="55938921036"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">activity配置</span><br></pre></td></tr></table></figure><p><img src="/2019/06/01/Android目录/1559389287681.png" alt="55938928768"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">AppCompatActivity 带有actionbar的activity</span><br><span class="line">onCreate ：</span><br><span class="line">setContentView 指定布局文件</span><br><span class="line">R文件，自动生成的，充当索引</span><br></pre></td></tr></table></figure><p><img src="/2019/06/01/Android目录/1559389445385.png" alt="55938944538"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">drawble目录 放置位图文件、xml资源文件、9 patch图片（9 patch工具生成的图片，可以报着图片不变形）</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Windows下Git的使用</title>
      <link href="/2019/05/27/Windows%E4%B8%8BGit%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
      <url>/2019/05/27/Windows%E4%B8%8BGit%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<p>首先自行安装。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git help -a //查看git提供了哪些命令</span><br></pre></td></tr></table></figure><p><img src="/2019/05/27/Windows下Git的使用/1558924683503.png" alt="55892468350"></p><h3 id="仓库命令"><a href="#仓库命令" class="headerlink" title="仓库命令"></a>仓库命令</h3><p>首先在Git路径下Git Bash Here，因为使用cmd好像会出现有的命令识别不到。</p><p><img src="/2019/05/27/Windows下Git的使用/1558925857558.png" alt="55892585755"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git show</span><br></pre></td></tr></table></figure><p><img src="/2019/05/27/Windows下Git的使用/1558926017790.png" alt="55892473654"></p><p>我们先使用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir xxx</span><br></pre></td></tr></table></figure><p>创建一个目录，然后cd到该目录下，</p><p><img src="/2019/05/27/Windows下Git的使用/1558926125375.png" alt="55892612537"></p><p>然后可以使用ll命令查看该目录下的资源内容，</p><p><img src="/2019/05/27/Windows下Git的使用/1558926294733.png" alt="55892629473"></p><p>ll命令在cmd中就使用不了，所以我就用git bash了。</p><p>接着，使用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br></pre></td></tr></table></figure><p>创建一个空的仓库，在当前目录中产生一个.git 的子目录。以后，所有的文件变化信息都会保存到这个目录下。</p><p><img src="/2019/05/27/Windows下Git的使用/1558926393756.png" alt="55892484987"></p><p><img src="/2019/05/27/Windows下Git的使用/1558926412243.png" alt="55892483261"></p><p>可以查看该目录结构</p><p><img src="/2019/05/27/Windows下Git的使用/1558926495973.png" alt="55892649597"></p><p>可以查看项目级别签名，</p><p><img src="/2019/05/27/Windows下Git的使用/1558926615267.png" alt="55892661526"></p><p>通过</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config user.name xxxx</span><br><span class="line">git config user.email xxxx</span><br></pre></td></tr></table></figure><p>添加项目级别签名。</p><p><img src="/2019/05/27/Windows下Git的使用/1558926749741.png" alt="55892674974"></p><p>再次<code>cat .git/config</code>查看.git下面的config文件信息。</p><p><img src="/2019/05/27/Windows下Git的使用/1558926819989.png" alt="55892681998"></p><p>然后下面命令是创建系统级别签名的</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config -global user.name xxxx</span><br><span class="line">git config -global user.email xxxx</span><br></pre></td></tr></table></figure><p>使用vim hello.txt添加一个hello.txt文件</p><p><img src="/2019/05/27/Windows下Git的使用/1558927158686.png" alt="55892715868"></p><p><img src="/2019/05/27/Windows下Git的使用/1558927207749.png" alt="55892720774"></p><p>使用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git status</span><br></pre></td></tr></table></figure><p>查看暂存区的文件状态，红色文字标记的文件表示工作区的文件待提交到暂存区，如下图所示：</p><p><img src="/2019/05/27/Windows下Git的使用/1558927285142.png" alt="55892728514"></p><p>通过</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git add</span><br></pre></td></tr></table></figure><p>将工作区的文件提交到暂存区。</p><p><img src="/2019/05/27/Windows下Git的使用/1558927380413.png" alt="55892738041"></p><p>再次使用<code>git status</code>查看暂存区的文件状态，此时绿色标记的部分表示暂存区有个文件待提交到本地库。</p><p><img src="/2019/05/27/Windows下Git的使用/1558927437582.png" alt="55892743758"></p><p>通过</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -m &quot;message&quot; hello.txt</span><br></pre></td></tr></table></figure><p>将暂存区的文件提交到本地库。</p><p><img src="/2019/05/27/Windows下Git的使用/1558929257418.png" alt="55892925741"></p><p>再次<code>git status</code>查看暂存区文件状态，此时暂存区没有要提交的信息</p><p><img src="/2019/05/27/Windows下Git的使用/1558929311778.png" alt="55892931177"></p><p>通过</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git log</span><br></pre></td></tr></table></figure><p>查看本地库的历史记录。</p><p><img src="/2019/05/27/Windows下Git的使用/1558929381025.png" alt="55892938102"></p><p>常用命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br></pre></td><td class="code"><pre><span class="line">1) 远程仓库相关命令</span><br><span class="line"></span><br><span class="line">检出仓库：$ git clone git://github.com/jquery/jquery.git</span><br><span class="line"></span><br><span class="line">查看远程仓库：$ git remote -v</span><br><span class="line"></span><br><span class="line">添加远程仓库：$ git remote add [name] [url]</span><br><span class="line"></span><br><span class="line">删除远程仓库：$ git remote rm [name]</span><br><span class="line"></span><br><span class="line">修改远程仓库：$ git remote set-url --push [name] [newUrl]</span><br><span class="line"></span><br><span class="line">拉取远程仓库：$ git pull [remoteName] [localBranchName]</span><br><span class="line"></span><br><span class="line">推送远程仓库：$ git push [remoteName] [localBranchName]</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">*如果想把本地的某个分支test提交到远程仓库，并作为远程仓库的master分支，或者作为另外一个名叫test的分支，如下：</span><br><span class="line"></span><br><span class="line">$git push origin test:master         // 提交本地test分支作为远程的master分支</span><br><span class="line"></span><br><span class="line">$git push origin test:test              // 提交本地test分支作为远程的test分支</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">2）分支(branch)操作相关命令</span><br><span class="line"></span><br><span class="line">查看本地分支：$ git branch</span><br><span class="line"></span><br><span class="line">查看远程分支：$ git branch -r</span><br><span class="line"></span><br><span class="line">创建本地分支：$ git branch [name] ----注意新分支创建后不会自动切换为当前分支</span><br><span class="line"></span><br><span class="line">切换分支：$ git checkout [name]</span><br><span class="line"></span><br><span class="line">创建新分支并立即切换到新分支：$ git checkout -b [name]</span><br><span class="line"></span><br><span class="line">删除分支：$ git branch -d [name] ---- -d选项只能删除已经参与了合并的分支，对于未有合并的分支是无法删除的。如果想强制删除一个分支，可以使用-D选项</span><br><span class="line"></span><br><span class="line">合并分支：$ git merge [name] ----将名称为[name]的分支与当前分支合并</span><br><span class="line"></span><br><span class="line">创建远程分支(本地分支push到远程)：$ git push origin [name]</span><br><span class="line"></span><br><span class="line">删除远程分支：$ git push origin :heads/[name] 或 $ gitpush origin :[name] </span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">*创建空的分支：(执行命令之前记得先提交你当前分支的修改，否则会被强制删干净没得后悔)</span><br><span class="line"></span><br><span class="line">$git symbolic-ref HEAD refs/heads/[name]</span><br><span class="line"></span><br><span class="line">$rm .git/index</span><br><span class="line"></span><br><span class="line">$git clean -fdx</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">3）版本(tag)操作相关命令</span><br><span class="line"></span><br><span class="line">查看版本：$ git tag</span><br><span class="line"></span><br><span class="line">创建版本：$ git tag [name]</span><br><span class="line"></span><br><span class="line">删除版本：$ git tag -d [name]</span><br><span class="line"></span><br><span class="line">查看远程版本：$ git tag -r</span><br><span class="line"></span><br><span class="line">创建远程版本(本地版本push到远程)：$ git push origin [name]</span><br><span class="line"></span><br><span class="line">删除远程版本：$ git push origin :refs/tags/[name]</span><br><span class="line"></span><br><span class="line">合并远程仓库的tag到本地：$ git pull origin --tags</span><br><span class="line"></span><br><span class="line">上传本地tag到远程仓库：$ git push origin --tags</span><br><span class="line"></span><br><span class="line">创建带注释的tag：$ git tag -a [name] -m &apos;yourMessage&apos;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">4) 子模块(submodule)相关操作命令</span><br><span class="line"></span><br><span class="line">添加子模块：$ git submodule add [url] [path]</span><br><span class="line"></span><br><span class="line">   如：$git submodule add git://github.com/soberh/ui-libs.git src/main/webapp/ui-libs</span><br><span class="line"></span><br><span class="line">初始化子模块：$ git submodule init  ----只在首次检出仓库时运行一次就行</span><br><span class="line"></span><br><span class="line">更新子模块：$ git submodule update ----每次更新或切换分支后都需要运行一下</span><br><span class="line"></span><br><span class="line">删除子模块：（分4步走哦）</span><br><span class="line"></span><br><span class="line"> 1) $ git rm --cached [path]</span><br><span class="line"></span><br><span class="line"> 2) 编辑“.gitmodules”文件，将子模块的相关配置节点删除掉</span><br><span class="line"></span><br><span class="line"> 3) 编辑“ .git/config”文件，将子模块的相关配置节点删除掉</span><br><span class="line"></span><br><span class="line"> 4) 手动删除子模块残留的目录</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">5）忽略一些文件、文件夹不提交</span><br><span class="line"></span><br><span class="line">在仓库根目录下创建名称为“.gitignore”的文件，写入不需要的文件夹名或文件，每个元素占一行即可，如</span><br><span class="line"></span><br><span class="line">target</span><br><span class="line"></span><br><span class="line">bin</span><br><span class="line"></span><br><span class="line">*.db</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line">Git 常用命令</span><br><span class="line"></span><br><span class="line">git branch 查看本地所有分支</span><br><span class="line">git status 查看当前状态 </span><br><span class="line">git commit 提交 </span><br><span class="line">git branch -a 查看所有的分支</span><br><span class="line">git branch -r 查看本地所有分支</span><br><span class="line">git commit -am &quot;init&quot; 提交并且加注释 </span><br><span class="line">git remote add origin git@192.168.1.119:ndshow</span><br><span class="line">git push origin master 将文件给推到服务器上 </span><br><span class="line">git remote show origin 显示远程库origin里的资源 </span><br><span class="line">git push origin master:develop</span><br><span class="line">git push origin master:hb-dev 将本地库与服务器上的库进行关联 </span><br><span class="line">git checkout --track origin/dev 切换到远程dev分支</span><br><span class="line">git branch -D master develop 删除本地库develop</span><br><span class="line">git checkout -b dev 建立一个新的本地分支dev</span><br><span class="line">git merge origin/dev 将分支dev与当前分支进行合并</span><br><span class="line">git checkout dev 切换到本地dev分支</span><br><span class="line">git remote show 查看远程库</span><br><span class="line">git add .</span><br><span class="line">git rm 文件名(包括路径) 从git中删除指定文件</span><br><span class="line">git clone git://github.com/schacon/grit.git 从服务器上将代码给拉下来</span><br><span class="line">git config --list 看所有用户</span><br><span class="line">git ls-files 看已经被提交的</span><br><span class="line">git rm [file name] 删除一个文件</span><br><span class="line">git commit -a 提交当前repos的所有的改变</span><br><span class="line">git add [file name] 添加一个文件到git index</span><br><span class="line">git commit -v 当你用－v参数的时候可以看commit的差异</span><br><span class="line">git commit -m &quot;This is the message describing the commit&quot; 添加commit信息</span><br><span class="line">git commit -a -a是代表add，把所有的change加到git index里然后再commit</span><br><span class="line">git commit -a -v 一般提交命令</span><br><span class="line">git log 看你commit的日志</span><br><span class="line">git diff 查看尚未暂存的更新</span><br><span class="line">git rm a.a 移除文件(从暂存区和工作区中删除)</span><br><span class="line">git rm --cached a.a 移除文件(只从暂存区中删除)</span><br><span class="line">git commit -m &quot;remove&quot; 移除文件(从Git中删除)</span><br><span class="line">git rm -f a.a 强行移除修改后文件(从暂存区和工作区中删除)</span><br><span class="line">git diff --cached 或 $ git diff --staged 查看尚未提交的更新</span><br><span class="line">git stash push 将文件给push到一个临时空间中</span><br><span class="line">git stash pop 将文件从临时空间pop下来</span><br><span class="line">---------------------------------------------------------</span><br><span class="line">git remote add origin git@github.com:username/Hello-World.git</span><br><span class="line">git push origin master 将本地项目给提交到服务器中</span><br><span class="line">-----------------------------------------------------------</span><br><span class="line">git pull 本地与服务器端同步</span><br><span class="line">-----------------------------------------------------------------</span><br><span class="line">git push (远程仓库名) (分支名) 将本地分支推送到服务器上去。</span><br><span class="line">git push origin serverfix:awesomebranch</span><br><span class="line">------------------------------------------------------------------</span><br><span class="line">git fetch 相当于是从远程获取最新版本到本地，不会自动merge</span><br><span class="line">git commit -a -m &quot;log_message&quot; (-a是提交所有改动，-m是加入log信息) 本地修改同步至服务器端 ：</span><br><span class="line">git branch branch_0.1 master 从主分支master创建branch_0.1分支</span><br><span class="line">git branch -m branch_0.1 branch_1.0 将branch_0.1重命名为branch_1.0</span><br><span class="line">git checkout branch_1.0/master 切换到branch_1.0/master分支</span><br><span class="line">du -hs</span><br><span class="line"></span><br><span class="line">-----------------------------------------------------------</span><br><span class="line">mkdir WebApp</span><br><span class="line">cd WebApp</span><br><span class="line">git init</span><br><span class="line">touch README</span><br><span class="line">git add README</span><br><span class="line">git commit -m &apos;first commit&apos;</span><br><span class="line">git remote add origin git@github.com:daixu/WebApp.git</span><br><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure><p>另外可以贴一个图：</p><p><img src="/2019/05/27/Windows下Git的使用/2010072023345292.png" alt="img"></p><p>可以见<a href="https://www.cnblogs.com/lidabo/p/6845345.html" target="_blank" rel="noopener">原著</a></p><p>##windows下使用git和github建立远程仓库</p><p>我们要将上面的demo上传到github。</p><p>首先先建立远程仓库，此处的仓库名不一定需要和本地仓库名相同。</p><p><img src="/2019/05/27/Windows下Git的使用/1558930431353.png" alt="55893043135"></p><p>注意记住上面的ssh链接，最好不用http；</p><p>接着上git bash进行操作，操作之前先得进行密钥配对，我再搭博客时就已经配对完成了。</p><p>然后上传之前要对修改做一次总结。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -m &quot;xxxxxxxxx&quot;</span><br></pre></td></tr></table></figure><p><img src="/2019/05/27/Windows下Git的使用/1558930806910.png" alt="55893080691"></p><p>然后需要将本地仓库和远程仓库建立连接：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin git@github.com:wylhyz/learngit.git</span><br></pre></td></tr></table></figure><p>origin是远程仓库在本地别名，你可以自由取，git链接是在建立远程仓库时要你记下的ssh连接。此句就是在本地建立远程仓库别名并链接到远程仓库。</p><p><img src="/2019/05/27/Windows下Git的使用/1558930955486.png" alt="55893095548"></p><p>然后使用如下命令就可以将更改上传了。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure><p><img src="/2019/05/27/Windows下Git的使用/1558931065207.png" alt="55893106520"></p><p>此时在github仓库上查看发现上传成功了</p><p><img src="/2019/05/27/Windows下Git的使用/1558931127611.png" alt="55893112761"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>新主题来了</title>
      <link href="/2019/05/26/%E6%96%B0%E4%B8%BB%E9%A2%98%E6%9D%A5%E4%BA%86/"/>
      <url>/2019/05/26/%E6%96%B0%E4%B8%BB%E9%A2%98%E6%9D%A5%E4%BA%86/</url>
      
        <content type="html"><![CDATA[<p>miho – This is summary</p><a id="more"></a>]]></content>
      
      
      
        <tags>
            
            <tag> First </tag>
            
            <tag> Second </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>草稿测试</title>
      <link href="/2019/05/26/%E8%8D%89%E7%A8%BF%E6%B5%8B%E8%AF%95/"/>
      <url>/2019/05/26/%E8%8D%89%E7%A8%BF%E6%B5%8B%E8%AF%95/</url>
      
        <content type="html"><![CDATA[<p>这是草稿测试</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>hexo配置</title>
      <link href="/2019/05/26/hexo%E9%85%8D%E7%BD%AE/"/>
      <url>/2019/05/26/hexo%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h2 id="Site"><a href="#Site" class="headerlink" title="Site"></a>Site</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">title: TR //网站标题</span><br><span class="line">subtitle: TR&apos;s Blog //网站副标题</span><br><span class="line">description: 学习永无止境 //网站描述</span><br><span class="line">keywords: //关键字,便于搜索引擎的搜索</span><br><span class="line">author: TR //您的名字</span><br><span class="line">language: zh-Hans //网站使用的语言</span><br><span class="line">timezone: //网站时区。Hexo 默认使用您电脑的时区。时区列表。比如说：America/New_York, Japan, 和 UTC 。</span><br></pre></td></tr></table></figure><p>其中，<code>description</code>主要用于SEO，告诉搜索引擎一个关于您站点的简单描述，通常建议在其中包含您网站的关键词。<code>author</code>参数用于主题显示文章的作者。</p><h2 id="URL"><a href="#URL" class="headerlink" title="URL"></a>URL</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">url: http://tanruidd.github.io //你需要把url改成你的网站域名</span><br><span class="line"></span><br><span class="line">root: / //网站根目录</span><br><span class="line"></span><br><span class="line">permalink: :year/:month/:day/:title/ //文章的永久链接格式, 比如我新建一个文章叫temp.md，那么这个时候他自动生成的地址就是http://yoursite.com/2018/09/05/temp。</span><br><span class="line"></span><br><span class="line">permalink_defaults: //永久链接中各部分的默认值</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">theme: landscape //theme就是选择什么主题，也就是在theme这个文件夹下，在官网上有很多个主题，默认给你安装的是lanscape这个主题。当你需要更换主题时，在官网上下载，把主题的文件放在theme文件夹下，再修改这个参数就可以了。</span><br></pre></td></tr></table></figure><h2 id="Deployment"><a href="#Deployment" class="headerlink" title="Deployment"></a>Deployment</h2><p>接下来这个deploy就是网站的部署的，repo就是仓库(Repository)的简写。branch选择仓库的哪个分支。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: https://github.com/tanruidd/tanruidd.github.io</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><h2 id="layout-布局"><a href="#layout-布局" class="headerlink" title="layout(布局)"></a>layout(布局)</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">post //路径source/_posts</span><br><span class="line">page //路径source</span><br><span class="line">draft //路径source/_drafts</span><br></pre></td></tr></table></figure><p>如果你想另起一页，那么可以使用page</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page board</span><br></pre></td></tr></table></figure><p>系统会自动给你在source文件夹下创建一个board文件夹，以及board文件夹中的index.md，这样你访问的board对应的链接就是<code>http://xxx.xxx/board</code></p><p><img src="/2019/05/26/hexo配置/1558856957188.png" alt="55885695718"></p><p>draft是草稿的意思，也就是你如果想写文章，又不希望被看到，那么可以</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new draft mypage</span><br></pre></td></tr></table></figure><p>这样会在source/_draft中新建一个newpage.md文件，如果你的草稿文件写的过程中，想要预览一下，那么可以使用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo server --draft</span><br></pre></td></tr></table></figure><p>在本地端口中开启服务预览。</p><p>如果你的草稿文件写完了，想要发表到post中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo publish draft newpage</span><br></pre></td></tr></table></figure><p>就会自动把newpage.md发送到post中。</p><h2 id="更改主题"><a href="#更改主题" class="headerlink" title="更改主题"></a>更改主题</h2><p>我找到了一个<a href="https://blog.minhow.com/2017/08/01/blog/installation-configuration/" target="_blank" rel="noopener">miho主题</a>，看着还不错。</p><p>基本上创建主题的人都会有教程的，跟着做就好了。</p><h2 id="设置评论系统"><a href="#设置评论系统" class="headerlink" title="设置评论系统"></a>设置评论系统</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">gitment: </span><br><span class="line">  owner: tanruidd   #你的 GitHub ID</span><br><span class="line">  repo: &apos;tanruidd.github.io&apos;   #存储评论的 repo</span><br><span class="line">  client_id: &apos;&apos; #client ID</span><br><span class="line">  client_secret: &apos;&apos; #client secret</span><br></pre></td></tr></table></figure><p>我是通过github的gitmet设置的评论系统</p><p>需要先在setting中最后一个建立一个OAuth App</p><p><img src="/2019/05/26/hexo配置/1558879533328.png" alt="55887953332"></p><p><img src="/2019/05/26/hexo配置/1558879572285.png" alt="55887957228"></p><p>将生成的id和secret放入相应位置即可。</p><p>操作之后发现不行，，，不能在自己域名下使用，只能在tanruidd.github.io下评论。</p><p>所以我又找了一个方法，valine评论。</p><p>首先需要注册leancloud账户，然后创建一个应用。</p><p><img src="/2019/05/26/hexo配置/1558882319438.png" alt="55888231943"></p><p>同样这里存在密钥，只不过我这个主题没有自带，所以我需要自己配置。</p><p>首先在\miho\_config.yml下增加</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">valine:</span><br><span class="line">  enable: true</span><br><span class="line">  appid:   #your App ID</span><br><span class="line">  appkey:  #your App Key</span><br><span class="line">  notify: false # mail notifier , https://github.com/xCss/Valine/wiki</span><br><span class="line">  verify: false # Verification code</span><br><span class="line">  placeholder: 来啊，快活啊! </span><br><span class="line">  pageSize: 10</span><br></pre></td></tr></table></figure><p><img src="/2019/05/26/hexo配置/1558882467933.png" alt="55888246793"></p><p>对应位置填写。</p><p>然后找到\miho\layout\_partial\article.ejs文件，添加如下代码到最后</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;% <span class="keyword">if</span> (theme.valine &amp;&amp; theme.valine.appid &amp;&amp; theme.valine.appkey)&#123; %&gt;</span><br><span class="line">&lt;section id=<span class="string">"comments"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"comments"</span>&gt;</span><br><span class="line">  &lt;style&gt;</span><br><span class="line">    .comments&#123;margin:30px;padding:10px;background:#fff&#125;</span><br><span class="line">    @media screen and (max-width:800px)&#123;.comments&#123;margin:auto;padding:10px;background:#fff&#125;&#125;</span><br><span class="line">  &lt;<span class="regexp">/style&gt;</span></span><br><span class="line"><span class="regexp">  &lt;%- partial('plugins/</span>comments/valine<span class="string">', &#123;</span></span><br><span class="line"><span class="string">    key: post.slug,</span></span><br><span class="line"><span class="string">    title: post.title,</span></span><br><span class="line"><span class="string">    url: config.url+url_for(post.path)</span></span><br><span class="line"><span class="string">    &#125;) %&gt;</span></span><br><span class="line"><span class="string">  &lt;/section&gt;</span></span><br><span class="line"><span class="string">&lt;% &#125; %&gt;</span></span><br></pre></td></tr></table></figure><p>在\miho\layout_partial\plugins\comments新建valine.ejs文件，输入下面内容。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=<span class="string">"vcomment"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"comment"</span>&gt;&lt;/div&gt; </span><br><span class="line">&lt;script src=<span class="string">"//cdn1.lncld.net/static/js/3.0.4/av-min.js"</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;script src=<span class="string">"//unpkg.com/valine/dist/Valine.min.js"</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">   <span class="keyword">var</span> notify = <span class="string">'&lt;%= theme.valine.notify %&gt;'</span> == <span class="literal">true</span> ? <span class="literal">true</span> : <span class="literal">false</span>;</span><br><span class="line">   <span class="keyword">var</span> verify = <span class="string">'&lt;%= theme.valine.verify %&gt;'</span> == <span class="literal">true</span> ? <span class="literal">true</span> : <span class="literal">false</span>;</span><br><span class="line">    <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">new</span> Valine(&#123;</span><br><span class="line">            el: <span class="string">'.comment'</span>,</span><br><span class="line">            notify: notify,</span><br><span class="line">            verify: verify,</span><br><span class="line">            app_id: <span class="string">"&lt;%= theme.valine.appid %&gt;"</span>,</span><br><span class="line">            app_key: <span class="string">"&lt;%= theme.valine.appkey %&gt;"</span>,</span><br><span class="line">            placeholder: <span class="string">"&lt;%= theme.valine.placeholder %&gt;"</span>,</span><br><span class="line">            avatar:<span class="string">"&lt;%= theme.valine.avatar %&gt;"</span></span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><p>然后生成部署一下就行了。</p><h2 id="SEO优化"><a href="#SEO优化" class="headerlink" title="SEO优化"></a>SEO优化</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SEO是由英文Search Engine Optimization缩写而来， 中文意译为“搜索引擎优化”。SEO是指通过站内优化比如网站结构调整、网站内容建设、网站代码优化等以及站外优化。</span><br></pre></td></tr></table></figure><p>推广是很麻烦的事情，怎么样别人才能知道我们呢，首先需要让搜索引擎收录你的这个网站，别人才能搜索的到。那么这就需要SEO优化了。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>hexo命令</title>
      <link href="/2019/05/26/hexo%E5%91%BD%E4%BB%A4/"/>
      <url>/2019/05/26/hexo%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<p><a href="https://hexo.io/zh-cn/docs/configuration" target="_blank" rel="noopener">官方文档</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>hexo图片问题</title>
      <link href="/2019/05/26/hexo%E5%9B%BE%E7%89%87%E9%97%AE%E9%A2%98/"/>
      <url>/2019/05/26/hexo%E5%9B%BE%E7%89%87%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<p>上传图片不能显示</p><p>修改_config.yml</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">post_asset_folder: true</span><br></pre></td></tr></table></figure><p>Hexo 提供了一种更方便管理 Asset 的设定：<code>post_asset_folder</code></p><p>当您设置<code>post_asset_folder</code>为<code>true</code>参数后，在建立文件时，Hexo会自动建立一个与文章同名的文件夹，您可以把与该文章相关的所有资源都放到那个文件夹，如此一来，您便可以更方便的使用资源。</p><p>在hexo的目录下执行<code>npm install hexo-asset-image --save</code> 下载一个插件。</p><p><code>hexo new &quot;xxx&quot;</code>新建一个测试文件</p><p>会发现_post文件夹下还有一个同名文件夹。</p><p>这是需要你的图片路径是</p><p><img src="/2019/05/26/hexo图片问题/1558854098058.png" alt="55885409805"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>一步步搭建博客</title>
      <link href="/2019/05/26/github%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
      <url>/2019/05/26/github%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<h2 id="前言和准备"><a href="#前言和准备" class="headerlink" title="前言和准备"></a>前言和准备</h2><p>好久之前搭建过一次博客，现在已经忘的差不多了，借此重新搭建一下，顺便回顾一下。</p><ul><li><p>首先我的github上面有我之前的博客项目，不过我想重新来一次，就先clone下来，然后删除该项目。</p><p><img src="/2019/05/26/github搭建博客/1558840289506.png" alt="55884028950"><img src="/2019/05/26/github搭建博客/1558840367084.png" alt="55884036708"></p><p>​</p></li><li><p>找到该项目的settings下的Delete this repository。</p></li></ul><p><img src="/2019/05/26/github搭建博客/1558841324720.png" alt="55884132472"></p><p><img src="/2019/05/26/github搭建博客/1558841387576.png" alt="55884138757"></p><ul><li>然后点击确认删除该项目</li></ul><p><img src="/2019/05/26/github搭建博客/1558840555470.png" alt="55884055547"></p><ul><li><p>需要先装两个软件 git和node.js</p><p><img src="/2019/05/26/github搭建博客/1558842485561.png" alt="55884248556"></p><p>这里注意git的安装</p><p><img src="/2019/05/26/github搭建博客/1558842855843.png" alt="55884285584"></p><p>这样就可以在cmd中操作了，附一个git的安装教程<a href="https://www.cnblogs.com/wj-1314/p/7993819.html" target="_blank" rel="noopener">链接</a>，再附一个node.js的安装教程<a href="https://blog.csdn.net/muzidigbig/article/details/80493880" target="_blank" rel="noopener">链接</a>。</p></li><li><p>装好之后可以在命令窗口（Win+R， 输入CMD，回车）检查一下，输入和结果如下图所示就安装完成了。</p><p><img src="/2019/05/26/github搭建博客/1558842700273.png" alt="55884270027"></p></li></ul><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><ul><li><p>接着对git进行配置，创建ssh key。</p><p>在git中输入ssh-keygen -t rsa，接着按三次回车：</p><p><img src="/2019/05/26/github搭建博客/1558843950771.png" alt="55884395077"></p><p>就会在相应位置生成id_rsa和id_rsa.pub这两个文件，前者是密钥，后者是公钥，用记事本打开id_rsa.pub，复制其中的全部内容，添加到GitHub上，这样本地的id_rsa密钥就可以和GitHub上的id_rsa.pub公钥进行配对，授权成功。</p><p><img src="/2019/05/26/github搭建博客/1558844989545.png" alt="55884498954"></p><p><img src="/2019/05/26/github搭建博客/1558845068896.png" alt="55884506889"></p></li><li><p>SSH key添加之后，就可以在本机输入ssh -T <a href="mailto:git@github.com" target="_blank" rel="noopener">git@github.com</a>进行测试</p><p><img src="/2019/05/26/github搭建博客/1558845306806.png" alt="55884530680"></p><p>可以输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config user.name</span><br><span class="line">git config user.email</span><br></pre></td></tr></table></figure><p>​</p><p><img src="/2019/05/26/github搭建博客/1558849240422.png" alt="55884924042"></p><p>如果不行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;yourname&quot;</span><br><span class="line">git config --global user.email &quot;youremail&quot;</span><br></pre></td></tr></table></figure><p>​</p></li></ul><h2 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h2><p>任意新建一个文件夹，比如blog，然后cd到该路径下，或者直接在该文件夹下右键然后git Bash Here</p><p><img src="/2019/05/26/github搭建博客/1558845515189.png" alt="55884551518"></p><p>输入npm install -g hexo安装hexo，等待一段时间即可。</p><p>接着输入hexo -v检查是否安装成功。</p><p><img src="/2019/05/26/github搭建博客/1558846056259.png" alt="55884605625"></p><p>接着初始化hexo，输入hexo init</p><p><img src="/2019/05/26/github搭建博客/1558846240757.png" alt="55884624075"></p><p>再安装npm，输入npm -install</p><p><img src="/2019/05/26/github搭建博客/1558846652672.png" alt="55884665267"></p><p>我们的目录下就有下面的文件</p><p><img src="/2019/05/26/github搭建博客/1558847361557.png" alt="55884736155"></p><p><a href="https://blog.csdn.net/abc_12366/article/details/87864623" target="_blank" rel="noopener">每个目录及文件介绍</a></p><p>输入hexo s 打开hexo服务器，输入<a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a>我们可以看到如下页面：</p><p><img src="/2019/05/26/github搭建博客/1558847261797.png" alt="55884726179"></p><p>hexo g之后出现public文件夹</p><h2 id="github创建个人仓库"><a href="#github创建个人仓库" class="headerlink" title="github创建个人仓库"></a>github创建个人仓库</h2><p>创建一个和你用户名相同的仓库，后面加github.io，只有这样，将来要部署到GitHub page的时候，才会被识别，也就是xxx.github.io。</p><p><img src="/2019/05/26/github搭建博客/1558847856350.png" alt="55884785635"></p><p><img src="/2019/05/26/github搭建博客/1558848274662.png" alt="55884827466"></p><h2 id="将hexo部署到github"><a href="#将hexo部署到github" class="headerlink" title="将hexo部署到github"></a>将hexo部署到github</h2><p>打开站点配置文件 <code>_config.yml</code>，翻到最后，修改为</p><p><img src="/2019/05/26/github搭建博客/1558848404769.png" alt="55884840476"></p><p>这个时候需要先安装deploy-git ，也就是部署的命令,这样你才能用命令部署到GitHub。</p><p><img src="/2019/05/26/github搭建博客/1558848500026.png" alt="55884850002"></p><p>然后输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean //清除了你之前生成的东西</span><br><span class="line">hexo generate //生成静态文章，可以用 hexo g缩写</span><br><span class="line">hexo deploy //部署文章，可以用hexo d缩写</span><br></pre></td></tr></table></figure><p><img src="/2019/05/26/github搭建博客/1558848599198.png" alt="55884859919"></p><p><img src="/2019/05/26/github搭建博客/1558848630743.png" alt="55884863074"></p><p><img src="/2019/05/26/github搭建博客/1558848723151.png" alt="55884872315"></p><p>在输入hexo deploy时可能会需要登录，输入用户名和密码即可。</p><p><img src="/2019/05/26/github搭建博客/1558848687064.png" alt="55884868706"></p><p>然后就能在GitHub上看到自己的项目了，也可以在<a href="http://tanruidd.github.io看到博客了。" target="_blank" rel="noopener">http://tanruidd.github.io看到博客了。</a></p><p><img src="/2019/05/26/github搭建博客/1558848874311.png" alt="55884887431"></p><h2 id="设置个人域名"><a href="#设置个人域名" class="headerlink" title="设置个人域名"></a>设置个人域名</h2><p>注册一个阿里云账户，在阿里云买一个域名，我买的是.top结尾的，比较便宜。</p><p>选择域名</p><p><img src="/2019/05/26/github搭建博客/1558849399651.png" alt="55884939965"></p><p>点解析 解析设置 </p><p><img src="/2019/05/26/github搭建博客/1558849460093.png" alt="55884946009"></p><p>添加解析 ip改成github的ip，ip从cmd中ping一下就得到了 </p><p><img src="/2019/05/26/github搭建博客/1558849924612.png" alt="55884992461"></p><p><img src="/2019/05/26/github搭建博客/1558849902139.png" alt="55884990213"></p><p>登录GitHub，进入之前创建的仓库，点击settings，设置Custom domain，输入你的域名<code>tanruidd.top</code></p><p><img src="/2019/05/26/github搭建博客/1558849668348.png" alt="55884966834"></p><p>然后在你的博客文件source中创建一个名为CNAME文件，不要后缀，内容为你的域名。</p><p>最后在在git中输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>等待一段时间就可以在自己的域名看见博客了。</p><p><img src="/2019/05/26/github搭建博客/1558850304242.png" alt="55885030424"></p><p>然后就是对博客的配置了，比如修改主题，可以根据需求自行修改。</p><p>可以查找hexo命令。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2019/05/26/hello-world/"/>
      <url>/2019/05/26/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
